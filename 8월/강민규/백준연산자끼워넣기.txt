
import Foundation
var t = Int(readLine()!)!
var numbers: [Int] = readLine()!.components(separatedBy: [" "]).map{Int(String($0))!}
var operators: [Int] = readLine()!.components(separatedBy: [" "]).map{Int(String($0))!}
var maxV = -1000000000
var minV = 1000000000

// i: 다음 인덱스, number: 초기 값
func dfs(i: Int, number: Int) {
    if i == t {
        maxV = max(maxV, number)
        minV = min(minV, number)
    }
    if operators[0] > 0 {
        operators[0] -= 1
        dfs(i: i + 1, number: number + numbers[i])
        operators[0] += 1
    }
    if operators[1] > 0 {
        operators[1] -= 1
        dfs(i: i + 1, number: number - numbers[i])
        operators[1] += 1
    }
    if operators[2] > 0 {
        operators[2] -= 1
        dfs(i: i + 1, number: number * numbers[i])
        operators[2] += 1
    }
    if operators[3] > 0 {
        operators[3] -= 1
        dfs(i: i + 1, number: Int(number / numbers[i]))
        operators[3] += 1
    }
}

dfs(i: 1, number: numbers[0])

print(maxV)
print(minV)
    
